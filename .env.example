#######################################
# Project environment variables
#######################################

# Should be same with downloaded and configured docker-shared-services
# Default: ss - ([S]hared [S]ervices)
# More info in repository docs: https://github.com/wayofdev/docker-shared-services
SHARED_SERVICES_NAMESPACE=${SHARED_SERVICES_NAMESPACE}

# Should be same with downloaded and configured docker-project-services
# Default: wod
# More info in repository docs: https://github.com/wayofdev/docker-project-services
PROJECT_SERVICES_NAMESPACE=${PROJECT_SERVICES_NAMESPACE}

# https://docs.docker.com/compose/reference/envvars/#compose_project_name
# With custom namespace provided, it will be used to prefix all services
# in Docker network for current project
COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}

APP_NAME=${APP_NAME}

#######################################
# Spiral default environment variables
#######################################

# Environment (prod or local)
APP_ENV=local

# Debug mode set to TRUE disables view caching and enables higher verbosity
DEBUG=true

# Verbosity level
# basic, verbose, debug
VERBOSITY_LEVEL=verbose

# Set to an application specific value, used to encrypt/decrypt cookies etc
ENCRYPTER_KEY={encrypt-key}

# Monolog
# Use "roadrunner" channel if you want to use RoadRunner logger
MONOLOG_DEFAULT_CHANNEL=default
# DEBUG, INFO, NOTICE, WARNING, ERROR, CRITICAL, ALERT, EMERGENCY
MONOLOG_DEFAULT_LEVEL=DEBUG

# Queue
QUEUE_CONNECTION=roadrunner

# Cache
CACHE_STORAGE=rr-local

# Storage
STORAGE_DEFAULT=default

TELEMETRY_DRIVER=null

SESSION_LIFETIME=86400
SESSION_COOKIE=sid

AUTH_TOKEN_TRANSPORT=cookie
AUTH_TOKEN_STORAGE=session

MAILER_DSN=
MAILER_QUEUE=local
MAILER_QUEUE_CONNECTION=
MAILER_FROM="Spiral <sendit@local.host>"

# Set to TRUE to disable confirmation in `migrate` commands
SAFE_MIGRATIONS=true

# Database
DB_CONNECTION=pgsql
DB_HOST=database
DB_PORT=5432
DB_DATABASE=wod
DB_USERNAME=wod
DB_PASSWORD=password
DB_FORWARD_PORT=5434

# Cycle Bridge
# (Don't forget to set `CYCLE_SCHEMA_CACHE` to `true` in production)
CYCLE_SCHEMA_CACHE=false
CYCLE_SCHEMA_WARMUP=false

SENTRY_DSN=


#######################################
# Deployer
#######################################

# Create slack app and add incoming webhook urls
# https://api.slack.com/messaging/webhooks
DEPLOYER_STAGING_SLACK_WEBHOOK=https://hooks.slack.com/services/XXXXXXX/XXXXX/XXXXXX
DEPLOYER_STAGING_REMOTE_USER=staging-xxxxx
DEPLOYER_STAGING_HOST=staging.spiral-starter-tpl.wayof.dev
DEPLOYER_STAGING_BRANCH=develop

DEPLOYER_PROD_SLACK_WEBHOOK=https://hooks.slack.com/services/XXXXXXX/XXXXX/XXXXXX
DEPLOYER_PROD_REMOTE_USER=prod-xxxxx
DEPLOYER_PROD_HOST=prod.spiral-starter-tpl.wayof.dev
DEPLOYER_PROD_BRANCH=master

# https://wayofdev.sentry.io/settings/account/api/auth-tokens/
DEPLOYER_SENTRY_TOKEN=50b88fxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
DEPLOYER_SENTRY_ORG=wayofdev
DEPLOYER_SENTRY_PROJECT=spiral-starter-tpl
DEPLOYER_SENTRY_SERVER=https://wayofdev.sentry.io
